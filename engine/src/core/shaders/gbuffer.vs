const std::string InternalShaders::gbufferVertexShader =
"layout (location = 0) in vec3 aPos;\n"
"layout (location = 1) in vec3 aNormal;\n"
"layout (location = 2) in vec2 aTexCoords;\n"
"layout (std140) uniform CameraBlock\n"
"{\n"
"	mat4 projection;\n"
"	mat4 view;\n"
"	vec3 cameraPos;\n"
"}Camera;\n"
"out vec3 FragPos;\n"
"out vec2 TexCoords;\n"
"out vec3 Normal;\n"
"uniform mat4 model;\n"
"void main()\n"
"{\n"
"    vec4 worldPos = model * vec4(aPos, 1.0);\n"
"    FragPos = worldPos.xyz;\n"
"    TexCoords = aTexCoords;\n"
"    mat3 normalMatrix = transpose(inverse(mat3(model)));\n"
"    Normal = normalMatrix * aNormal;\n"
"    gl_Position = Camera.projection * Camera.view * worldPos;\n"
"}\n";


const std::string InternalShaders::gbufferFragmentShader =
"layout (location = 0) out vec3 gPosition;\n"
"layout (location = 1) out vec3 gNormal;\n"
"layout (location = 2) out vec4 gAlbedoSpec;\n"
"in vec2 TexCoords;\n"
"in vec3 FragPos;\n"
"in vec3 Normal;\n"
"uniform sampler2D texture_diffuse1;\n"
"uniform sampler2D texture_specular1;\n"
"void main()\n"
"{\n"
"    // store the fragment position vector in the first gbuffer texture\n"
"    gPosition = FragPos;\n"
"    // also store the per-fragment normals into the gbuffer\n"
"    gNormal = normalize(Normal);\n"
"    // and the diffuse per-fragment color\n"
"    gAlbedoSpec.rgb = texture(texture_diffuse1, TexCoords).rgb;\n"
"    // store specular intensity in gAlbedoSpec's alpha component\n"
"    gAlbedoSpec.a = texture(texture_specular1, TexCoords).r;\n"
"}\n";
